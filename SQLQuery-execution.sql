-----------------------------------------------------------------TASK 2---------------------------------------------------------------
-- 1. List all customers:
select * from user_tb

-- 2. List all orders for a specific customer:
select * from courier where sendername = 'Customer_Name'
-- 3. List all couriers:
select * from courier

-- 4. List all packages for a specific order:
select * from courier where courier_id = 101

-- 5. List all deliveries for a specific courier:
select * from courier where status = 'delivered' and courier_id = 101

-- 6. List all undelivered packages:
select * from courier where status <> 'delivered'

-- 7. List all packages that are scheduled for delivery today:
select * from courier where delivary_date = cast(getdate() as date)

-- 8. List all packages with a specific status:
select * from courier where status = 'dispatched'

-- 9. Calculate the total number of packages for each courier:
select sendername, count(*) as total_packages from courier group by sendername

-- 10. Find the average delivery time for each courier (assuming delivery time is calculated using order and delivery date)
select sendername, avg(datediff(day, delivary_date, 
getdate())) as avg_delivery_time from courier group by sendername

-- 11. List all packages with a specific weight range (replace 2 and 5 with the desired range)
select * from courier where weight between 2 and 5;

-- 12. Retrieve employees whose names contain 'john'
select * from employee where employee_name like '%john%'

-- 13. Retrieve all courier records with payments greater than $50
select c.* from courier c 
join payment p on c.courier_id = p.courier_id 
where p.amount > 50
----------------------------------------------------------------------------TASK 3-----------------------------------------------------
-- 14. Find the total number of couriers handled by each employee
select e.employee_name, count(c.courier_id) as total_couriers 
from employee e 
join courier c on e.employee_id = c.courier_id 
group by e.employee_name

-- 15. Calculate the total revenue generated by each location
select l.location_name, sum(p.amount) as total_revenue 
from location l 
join payment p on l.location_id = p.location_id 
group by l.location_name

-- 16. Find the total number of couriers delivered to each location
select l.location_name, count(c.courier_id) as total_deliveries 
from location l 
join payment p on l.location_id = p.location_id 
join courier c on p.courier_id = c.courier_id 
where c.status = 'delivered' 
group by l.location_name

-- 17. Find the courier with the highest average delivery time
select top 1 sendername, avg(datediff(day, delivary_date, getdate())) as avg_delivery_time 
from courier 
group by sendername 
order by avg_delivery_time desc

-- 18. Find locations with total payments less than a certain amount (replace 500 with desired amount)
select l.location_name, sum(p.amount) as total_payments 
from location l 
join payment p on l.location_id = p.location_id 
group by l.location_name 
having sum(p.amount) < 500

-- 19. Calculate total payments per location
select l.location_name, sum(p.amount) as total_payments 
from location l 
join payment p on l.location_id = p.location_id 
group by l.location_name

-- 20. Retrieve couriers who have received payments totaling more than $1000 in a specific location (replace X with location ID)
select c.sendername, sum(p.amount) as total_payments 
from courier c 
join payment p on c.courier_id = p.courier_id 
where p.location_id = 204
group by c.sendername 
having sum(p.amount) > 1000
-- 21. Retrieve couriers who have received payments totaling more than $1000 after a certain date (replace 'YYYY-MM-DD' with actual date)
select c.sendername, sum(p.amount) as total_payments 
from courier c 
join payment p on c.courier_id = p.courier_id 
where p.paymentdate > '2024-03-02' 
group by c.sendername 
having sum(p.amount) > 1000
select * from Payment
-- 22. Retrieve locations where the total amount received is more than $5000 before a certain date (replace 'YYYY-MM-DD' with actual date)
select l.location_name, sum(p.amount) as total_payments 
from location l 
join payment p on l.location_id = p.location_id 
where p.paymentdate < 'YYYY-MM-DD' 
group by l.location_name 
having sum(p.amount) > 5000

select * from Courier
select * from Courierservice 
select * from Payment
select * from Location
select * from Employee
select * from User_tb